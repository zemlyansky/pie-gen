// Generated by Haxe 3.4.4
#ifndef INCLUDED_PieChartGen
#define INCLUDED_PieChartGen

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(PieChartGen)



class HXCPP_CLASS_ATTRIBUTES PieChartGen_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef PieChartGen_obj OBJ_;
		PieChartGen_obj();

	public:
		enum { _hx_ClassId = 0x50f3f6d6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="PieChartGen")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"PieChartGen"); }

		hx::ObjectPtr< PieChartGen_obj > __new() {
			hx::ObjectPtr< PieChartGen_obj > __this = new PieChartGen_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< PieChartGen_obj > __alloc(hx::Ctx *_hx_ctx) {
			PieChartGen_obj *__this = (PieChartGen_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(PieChartGen_obj), false, "PieChartGen"));
			*(void **)__this = PieChartGen_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~PieChartGen_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("PieChartGen","\x9e","\x52","\x66","\xf3"); }

		static void __boot();
		static int SIZE;
		static int RADIUS;
		static ::Array< Float > normalizeValues(::Array< Float > values);
		static ::Dynamic normalizeValues_dyn();

		static ::Array< ::String > calculateArcs(::Array< Float > values);
		static ::Dynamic calculateArcs_dyn();

		static ::Array< ::Dynamic> calculateMiddlePoints(::Array< Float > values,Float innerRadiusSize);
		static ::Dynamic calculateMiddlePoints_dyn();

		static  ::Dynamic hexToTriad(::String hex);
		static ::Dynamic hexToTriad_dyn();

		static int calculateOneColor(int c1,int c2,Float shift);
		static ::Dynamic calculateOneColor_dyn();

		static ::Array< ::Dynamic> calculateColors(::cpp::VirtualArray baseColors,int valuesLength);
		static ::Dynamic calculateColors_dyn();

		static ::String create( ::Dynamic values, ::Dynamic params);
		static ::Dynamic create_dyn();

};


#endif /* INCLUDED_PieChartGen */ 
